---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 11/15/2022 9:44 PM
---
local mod_gui = require('mod-gui')
local String = require('__stdlib__/stdlib/utils/string')

local ArmyPopulationProcessor = require("__enemyracemanager__/lib/army_population_processor")

local Army_MainWindow = {
    require_update_all = false,
    root_name = 'erm_army_main',
    window_width = 680,
    window_height = 400,
}

function Army_MainWindow.show(player)
    local gui = player.gui.screen
    if gui[Army_MainWindow.root_name] then
        return
    end
    local main_window = gui.add {
        type = "frame",
        name = Army_MainWindow.root_name,
        direction = "vertical",
    }
    main_window.force_auto_center()
    player.opened = main_window

    main_window.style.maximal_width = Army_MainWindow.window_width
    main_window.style.minimal_width = Army_MainWindow.window_width
    main_window.style.maximal_height = Army_MainWindow.window_height * 2
    main_window.style.minimal_height = Army_MainWindow.window_height
    -- Race Manager Title
    local title_flow = main_window.add { type = 'flow', name = 'title_flow', direction = 'horizontal' }
    title_flow.style.minimal_width = Army_MainWindow.window_width
    title_flow.style.maximal_width = Army_MainWindow.window_width

    local title = title_flow.add { type = 'label', name = 'title', caption = { "gui.army-control-title" }, style = 'caption_label' }

    local pusher = title_flow.add{type = "empty-widget", style = "draggable_space_header"}
    pusher.style.width = Army_MainWindow.window_width - 24 - 160
    pusher.style.height = 24
    pusher.drag_target = main_window

    local close_button = title_flow.add { type = "sprite-button",
                                          name = 'erm_army_close_button',
                                          sprite = "utility/close_white",
                                          style = 'frame_action_button',
                                          tooltip = {"gui.close-instruction"}
    }
    close_button.style.width = 24
    close_button.style.height = 24
    close_button.style.horizontal_align = 'right'

    local scroll = main_window.add { type = "scroll-pane", style = "scroll_pane_in_shallow_frame" }
    scroll.style.margin = 5

    local army_data = ArmyPopulationProcessor.get_army_data(player.force)
    scroll.add { type = 'label', name = 'army_pop_general_info', caption={"gui.army_pop_general_info",army_data['max_pop'], army_data['pop_count'], army_data['unit_count']}}

    if table_size(army_data['unit_types']) > 0 then
        local item_table = scroll.add { type = "table", column_count = 3, style = "bordered_table" }
        item_table.style.horizontally_stretchable = false

        item_table.add { type = "label", caption = { 'gui.army_control_unit_type'}}
        item_table.add { type = "label", caption = { 'gui.army_control_unit_pop'}}
        item_table.add { type = "label", caption = { 'gui.army_control_unit_count'}}


        for name, unit_data in pairs(army_data['unit_types']) do
            local sprite = item_table.add { type = "sprite", sprite = 'recipe/'..name }
            sprite.style.width = 32
            sprite.style.height = 32
            item_table.add { type = "label", caption = unit_data['pop_count']  }
            item_table.add { type = "label", caption = unit_data['unit_count'] }
        end
    end
end


function Army_MainWindow.hide(player)
    if player.gui.screen[Army_MainWindow.root_name] then
        player.gui.screen[Army_MainWindow.root_name].destroy()
    end
end

function Army_MainWindow.update(player)
    if Army_MainWindow.is_showing(player) then
        --- Update
    end
end

function Army_MainWindow.update_all()
    for k, player in pairs(game.players) do
        if player then
            Army_MainWindow.update(player)
        end
    end
end

function Army_MainWindow.is_hidden(player)
    return player.gui.screen[Army_MainWindow.root_name] == nil
end

function Army_MainWindow.is_showing(player)
    return not Army_MainWindow.is_hidden(player)
end

function Army_MainWindow.toggle_main_window(owner)
    if owner then
        local button_flow = mod_gui.get_button_flow(owner)

        if Army_MainWindow.is_hidden(owner) then
            button_flow.erm_army_control_toggle.tooltip = { 'gui.show-army-control' }
            Army_MainWindow.show(owner)
        else
            button_flow.erm_army_control_toggle.tooltip = { 'gui.show-army-control' }
            Army_MainWindow.hide(owner)
        end
    end
end

function Army_MainWindow.toggle_close(owner)
    if owner then
        local button_flow = mod_gui.get_button_flow(owner)
        button_flow.erm_army_control_toggle.tooltip = { 'gui.show-army-control' }
        Army_MainWindow.hide(owner)
    end
end

function Army_MainWindow.update_overhead_button(player_index)
    local owner = game.players[player_index]
    local button_flow = mod_gui.get_button_flow(owner)

    if owner and button_flow and not button_flow['erm_army_control_toggle'] then
        button_flow.add { type = "sprite-button", name = "erm_army_control_toggle", tooltip = { 'gui.show-army-control' }, sprite = 'item/submachine-gun' }
    end
end

return Army_MainWindow
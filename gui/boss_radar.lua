---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 9/19/2025 6:04 PM
---

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 11/5/2022 11:13 AM
---

require('util')

local GlobalConfig = require("__enemyracemanager__/lib/global_config")

local SurfaceProcessor = require("__enemyracemanager__/lib/surface_processor")
local RaceSettingsHelper = require("__enemyracemanager__/lib/helper/race_settings_helper")
local QualityProcessor = require("__enemyracemanager__/lib/quality_processor")

--- Boss Radar Windows
local BossRadarWindow = {
    root_name = "erm_boss_radar",
    window_width = 720,
}


function BossRadarWindow.show(player)
    local gui = player.gui.screen
    if gui[BossRadarWindow.root_name] or 
        not (storage.boss and storage.boss.radar and storage.boss.radar.valid)
    then
        return
    end
    
    local boss_window = gui.add {
        type = "frame",
        name = BossRadarWindow.root_name,
        direction = "vertical",
    }
    boss_window.force_auto_center()
    BossRadarWindow.parent_window = player.opened
    player.opened = boss_window

    local admin = player.admin

    -- Race Manager Title
    local title_flow = boss_window.add { type = "flow", name = "title_flow", direction = "horizontal" }
    title_flow.style.minimal_width = BossRadarWindow.window_width

    local title = title_flow.add { type = "label", name = "title", caption = { "gui.boss_radar_title" }, style = "caption_label" }

    local pusher = title_flow.add { type = "empty-widget", style = "draggable_space_header" }
    pusher.style.vertically_stretchable = true
    pusher.style.horizontally_stretchable = true
    pusher.drag_target = boss_window

    local close_button = title_flow.add { type = "sprite-button",
                                          name = "erm_boss_radar_close_button",
                                          sprite = "utility/close",
                                          style = "frame_action_button",
                                          tooltip = { "gui.back-instruction" }
    }
    close_button.style.width = 24
    close_button.style.height = 24
    close_button.style.horizontal_align = "right"

    local main_flow = boss_window.add { type = "flow", direction = "horizontal" }
    local left_flow = main_flow.add { type = "flow", direction = "vertical" }
    left_flow.style.width = BossRadarWindow.window_width / 2

    -- Add radar view to the left
    local radar_frame = left_flow.add { type = "frame", name = "radar_frame", direction = "vertical" }
    radar_frame.style.width = BossRadarWindow.window_width / 2 - 20
    radar_frame.style.height = BossRadarWindow.window_width / 2 - 20
    

    local radar_gui = radar_frame.add {
        type = "camera",
        name = "boss_radar_view",
        position = storage.boss.radar.position,
        surface_index = storage.boss.radar.surface.index,
        zoom = 0.25
    }
    radar_gui.style.width = BossRadarWindow.window_width / 2 - 40
    radar_gui.style.height = BossRadarWindow.window_width / 2 - 70

    
    -- Add health ratio label for radar
    local radar_health_flow = radar_frame.add { type = "flow", direction = "horizontal" }
    local radar_health_label = radar_health_flow.add {
        type = "label",
        name = "radar_health_ratio",
        caption = {"",{"gui.boss_radar_radar_health"},string.format("%.2f", storage.boss.radar.get_health_ratio() * 100), "%"}
    }
    local radar_goto_button = radar_health_flow.add { type = "button", name = 'erm_boss_radar_goto_radar', caption = { "gui.boss_radar_goto_radar" } }
    radar_goto_button.style.width = BossRadarWindow.window_width / 6
    radar_goto_button.style.left_margin = 10

    local data_flow = left_flow.add { type = "flow", name = "data_flow", direction = "vertical" }
    local radar_tier_label = data_flow.add {
        type = "label",
        name = "boss_radar_data_tier",
        caption = {"",{"gui.boss_detail_data_tier"},": " ,storage.boss.boss_tier }
    }
    


    local right_flow = main_flow.add { type = "flow", direction = "vertical" }
    right_flow.style.width = BossRadarWindow.window_width / 2

    -- Add entity camera view to the right
    local entity_frame = right_flow.add { type = "frame", name = "entity_frame", direction = "vertical" }
    entity_frame.style.width = BossRadarWindow.window_width / 2 - 20
    entity_frame.style.height = BossRadarWindow.window_width / 2 - 20
    
    if storage.boss and storage.boss.entity and storage.boss.entity.valid then
        local entity_gui = entity_frame.add {
            type = "camera",
            name = "boss_entity_view",
            position = storage.boss.entity.position,
            surface_index = storage.boss.entity.surface.index,
            zoom = 0.25
        }
        entity_gui.style.width = BossRadarWindow.window_width / 2 - 40
        entity_gui.style.height = BossRadarWindow.window_width / 2 - 70
        
        -- Add health ratio label for entity
        local entity_health_flow = entity_frame.add { type = "flow", direction = "horizontal" }
        local entity_health_label = entity_health_flow.add {
            type = "label",
            name = "entity_health_ratio",
            caption = {"",{"gui.boss_radar_boss_health"},string.format("%.2f", storage.boss.entity.get_health_ratio() * 100), "%"}
        }
        local entity_goto_button = entity_health_flow.add { type = "button", name = 'erm_boss_radar_goto_boss', caption = { "gui.boss_radar_goto_boss" } }
        entity_goto_button.style.width = BossRadarWindow.window_width  / 6
        entity_goto_button.style.left_margin = 10
    else
        entity_frame.add { type = "label", caption = {"gui.boss_radar_searching_boss"} }
    end

    -- Admin controls section (only visible for admin players)
    if admin then
        local admin_flow = right_flow.add { type = "flow", name = "admin_flow", direction = "vertical" }
        admin_flow.add { type = "label", caption = {"gui.boss_radar_admin_control"} }
        
        local entity_goto_button = admin_flow.add { type = "button", name = 'erm_boss_radar_surrender', caption = { "gui.boss_radar_surrender" },  style = "red_button" }
        entity_goto_button.style.width = BossRadarWindow.window_width  / 6
    end
end

function BossRadarWindow.hide(player)
    if player.gui.screen[BossRadarWindow.root_name] then
        player.gui.screen[BossRadarWindow.root_name].destroy()
    end
end

function BossRadarWindow.toggle_main_window(player)
    if player then
        if player.gui.screen[BossRadarWindow.root_name] == nil then
            BossRadarWindow.show(player)
        else
            BossRadarWindow.hide(player)
        end
    end
end


return BossRadarWindow
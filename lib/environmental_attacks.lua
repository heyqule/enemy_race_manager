---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 7/1/2024 5:42 PM
---

local Config = require("__enemyracemanager__/lib/global_config")
local ForceHelper = require("__enemyracemanager__/lib/helper/force_helper")
local RaceSettingHelper = require("__enemyracemanager__/lib/helper/race_settings_helper")
local AttackGroupProcessor = require("__enemyracemanager__/lib/attack_group_processor")
local BaseBuildProcessor = require("__enemyracemanager__/lib/base_build_processor")

local is_valid = function(surface, target_position, force_spawn, spawn_chance)
    local valid = surface and surface.valid and target_position
    -- @TODO need a way to specify chance
    local can_spawn = RaceSettingHelper.can_spawn(spawn_chance)

    if force_spawn ~= nil then
        can_spawn = force_spawn
    end

    if valid and can_spawn then
        return true
    end
    return false
end

local EnvironmentalAttacks = {}

function EnvironmentalAttacks.exec(options)
    local surface = options.surface
    local target_position = options.target_position
    local force_spawn = options.force_spawn
    local force_spawn_base = options.force_spawn_base

    local spawn_count = options.spawn_count or 5
    local spawn_chance = options.spawn_chance or 33

    if is_valid(surface, target_position, force_spawn, spawn_chance) and
       ForceHelper.can_have_enemy_on(surface)
    then
        local group = AttackGroupProcessor.generate_immediate_group({
            surface = surface,
            group_position = target_position,
            spawn_count = spawn_count
        })

        local can_spawn_home = RaceSettingHelper.can_spawn(spawn_chance)

        if force_spawn_base == true then
            can_spawn_home = force_spawn_base
        end

        if can_spawn_home then
            BaseBuildProcessor.build_formation(group)
        else
            AttackGroupProcessor.process_attack_position({
                group = group,
                distraction = defines.distraction.by_anything,
                find_nearby = true
            })
            storage.erm_unit_groups[group.unique_id] = {
                group = group,
                start_position = group.position,
                always_angry = false,
                nearby_retry = 0,
                attack_force = nil,
                created = game.tick,
                is_aerial = false
            }
        end
    end
end

function EnvironmentalAttacks.reset_global()
    storage.override_environmental_attack_spawn_home = nil
    storage.override_environmental_attack_can_spawn = nil
end

return EnvironmentalAttacks
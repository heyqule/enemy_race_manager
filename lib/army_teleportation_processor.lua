---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 11/15/2022 10:25 PM
---

--- It can teleport registered army units, base-game spidertron, base-game car, base-game tank, base-game character
local ArmyTeleportationProcessor = {}

-- Disable link if cc link idle for 60s.
local MAX_RETRY = 30;

function ArmyTeleportationProcessor.init_globals()
    global.army_entrance_teleporters = global.army_entrance_teleporters or {}
    global.army_exit_teleporters = global.army_exit_teleporters or {}
    global.army_built_teleporters = global.army_built_teleporters or {}
    global.army_teleporters_name_mapping = global.army_teleporters_name_mapping or {}
    global.army_registered_command_centers = global.army_registered_command_centers or {}
end

function ArmyTeleportationProcessor.register_building(name)
    global.army_registered_command_centers[name] = true
end

function ArmyTeleportationProcessor.add_entity(entity)
    if global.army_built_teleporters[entity.force.index] == nil then
        global.army_built_teleporters[entity.force.index] = {}
    end

    if global.army_built_teleporters[entity.force.index][entity.surface.index] == nil then
        global.army_built_teleporters[entity.force.index][entity.surface.index] = {}
    end
    local name = entity.surface.name .. ', X:'..entity.position.x..', Y:'.. entity.position.y
    entity.backer_name = name
    global.army_built_teleporters[entity.force.index][entity.surface.index][entity.unit_number] = {
        entity = entity,
        -- To do support rally points
        rally_point = {}
    }
    global.army_teleporters_name_mapping[entity.backer_name] = {
        force_id = entity.force.index,
        surface_id = entity.surface.index,
        unit_number = entity.unit_number
    }
end

function ArmyTeleportationProcessor.getObjectByName(backer_name)
    local name_map = global.army_teleporters_name_mapping[backer_name]
    if name_map then
        return global.army_built_teleporters[name_map.force_id][name_map.surface_id][name_map.unit_number]
    end
end

function ArmyTeleportationProcessor.getEntityByName(backer_name)
    local teleport_object = ArmyTeleportationProcessor.getObjectByName(backer_name)
    if teleport_object then
        return teleport_object.entity
    end
end

function ArmyTeleportationProcessor.remove_entity(entity)
    global.army_built_teleporters[entity.force.index][entity.surface.index][entity.unit_number] = nil
    global.army_teleporters_name_mapping[entity.backer_name] = nil
end

function ArmyTeleportationProcessor.link(player, from, to)
    global.army_entrance_teleporters[player.force.index] = from
    global.army_entrance_teleporters[player.force.index].idle_retry = 0
    global.army_exit_teleporters[player.force.index] = to
end

function ArmyTeleportationProcessor.unlink(player)
    global.army_entrance_teleporters[player.force.index] = nil
    global.army_exit_teleporters[player.force.index] = nil
end

function ArmyTeleportationProcessor.get_linked_entities(player)
    if global.army_entrance_teleporters[player.force.index] then
        return global.army_entrance_teleporters[player.force.index].entity, global.army_exit_teleporters[player.force.index].entity
    end
end

function ArmyTeleportationProcessor.teleport()

end

return ArmyTeleportationProcessor
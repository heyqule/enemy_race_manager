---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 1/6/2024 6:34 PM
---

local ForceHelper = require('lib/helper/force_helper')
local LevelManager = require('lib/level_processor')
local AttackGroupBeaconProcessor = require('lib/attack_group_beacon_processor')

local TestShared = {}

function TestShared.prepare_the_factory()
    local surface = game.surfaces[1]

    for key, _ in pairs(game.forces) do
        local entities = surface.find_entities_filtered({ force = game.forces[key] })
        for _, entity in pairs(entities) do
            entity.destroy({raise_destroy=true})
        end
    end

    LevelManager.reset_all_progress()
    AttackGroupBeaconProcessor.reset_globals()
    TestShared.reset_attack_meter()
end

function TestShared.reset_the_factory()
    local surface = game.surfaces[1]
    for key, _ in pairs(game.forces) do
        local entities = surface.find_entities_filtered({ force = game.forces[key] })
        for _, entity in pairs(entities) do
            entity.destroy({raise_destroy=true})
        end
    end

    LevelManager.reset_all_progress()
    AttackGroupBeaconProcessor.reset_globals()
    TestShared.reset_attack_meter()
end

function TestShared.reset_attack_meter()
    for key, force in pairs(game.forces) do
        local force_name = force.name
        local race_name = ForceHelper.extract_race_name_from(force_name)
        if race_name then
            global.race_settings[race_name].attack_meter = 0
            global.race_settings[race_name].attack_meter_total = 0
        end
    end
end


return TestShared
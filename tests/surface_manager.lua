---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 1/7/2024 2:39 PM
---

local SurfaceProcessor = require("__enemyracemanager__/lib/surface_processor")
local TestShared = require("shared")



before_each(function()
    TestShared.prepare_the_factory()
end)

after_each(function()
    TestShared.reset_the_factory()
end)


it("Add and remove surface", function()
    local char = game.planets['char']
    local valcanus = game.planets['vulcanus']
    local nauvis = game.planets['nauvis']
    char.create_surface()
    valcanus.create_surface()
    after_ticks(60, function()
        assert.not_nil(storage.enemy_surfaces[char.surface.name],"Char has enemy data")
        assert.not_nil(storage.enemy_surfaces[valcanus.surface.name],"Valcanus has enemy data")
        assert.not_nil(storage.enemy_surfaces[nauvis.surface.name],"Nauvis has enemy data")
    end)
end)

ticks_between_tests(60)
it("Reindex Surfaces", function()
    local surface_count = 10
    for i = 0, surface_count, 1 do
        local new_surface_name = "test_surface"..tostring(i)
        game.create_surface(new_surface_name)
    end

    local old_list = table.deepcopy(storage.enemy_surfaces)
    storage.enemy_surfaces = {}
    SurfaceProcessor.rebuild_race()
    local new_list = table.deepcopy(storage.enemy_surfaces)
    assert.not_equal(old_list, new_list, "Both list should not be equal")
    assert.equal(table_size(new_list), storage.total_enemy_surfaces, "Total enemy surface and new list must be equal")
    for i = 0, surface_count, 1 do
        local new_surface_name = "test_surface"..tostring(i)
        game.delete_surface(new_surface_name)
    end
end)
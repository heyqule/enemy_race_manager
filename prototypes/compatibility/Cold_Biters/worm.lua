---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 03/16/2020 1:56 PM
---

local ErmConfig = require('__enemyracemanager__/lib/global_config')
local ERM_UnitHelper = require('__enemyracemanager__/lib/unit_helper')
local ERM_DebugHelper = require('__enemyracemanager__/lib/debug_helper')

local Table = require('__stdlib__/stdlib/utils/table')
local String = require('__stdlib__/stdlib/utils/string')
require('util')

require('__stdlib__/stdlib/utils/defines/time')
require('__enemyracemanager__/global')

local health_multiplier = settings.startup["enemyracemanager-level-multipliers"].value
local max_hitpoint_multiplier = settings.startup["enemyracemanager-max-hitpoint-multipliers"].value

local resistance_mutiplier = settings.startup["enemyracemanager-level-multipliers"].value
-- Handles acid and poison resistance
local base_acid_resistance = 0
local incremental_acid_resistance = 50
-- Handles physical resistance
local base_physical_resistance = 0
local incremental_physical_resistance = 75
-- Handles fire and explosive resistance
local base_fire_resistance = -100
local incremental_fire_resistance = 0
-- Handles laser and electric resistance
local base_electric_resistance = -50
local incremental_electric_resistance = 100

function makeLevelTurrets(level, type, health_cut_ratio)
    local turret = util.table.deepcopy(data.raw['turret'][type])

    local original_hitpoint = turret['max_health']

    turret['localised_name'] = { 'entity-name.' .. MOD_NAME .. '/' .. turret['name'], level }
    turret['name'] = MOD_NAME .. '/' .. turret['name'] .. '/' .. level;
    turret['max_health'] = ERM_UnitHelper.get_building_health(original_hitpoint, original_hitpoint * max_hitpoint_multiplier, health_multiplier, level)
    turret['resistances'] = {
        { type = "acid", percent = ERM_UnitHelper.get_resistance(base_acid_resistance, incremental_acid_resistance, resistance_mutiplier, level) },
        { type = "poison", percent = ERM_UnitHelper.get_resistance(base_acid_resistance, incremental_acid_resistance, resistance_mutiplier, level) },
        { type = "physical", percent = ERM_UnitHelper.get_resistance(base_physical_resistance, incremental_physical_resistance, resistance_mutiplier, level) },
        { type = "fire", percent = ERM_UnitHelper.get_resistance(base_fire_resistance, incremental_fire_resistance, resistance_mutiplier, level) },
        { type = "explosion", percent = ERM_UnitHelper.get_resistance(base_fire_resistance, incremental_fire_resistance, resistance_mutiplier, level) },
        { type = "laser", percent = ERM_UnitHelper.get_resistance(base_electric_resistance, incremental_electric_resistance, resistance_mutiplier, level) },
        { type = "electric", percent = ERM_UnitHelper.get_resistance(base_electric_resistance, incremental_electric_resistance, resistance_mutiplier, level) },
        { type = "cold", percent = 95 }
    }
    turret['healing_per_tick'] = ERM_UnitHelper.get_building_healing(original_hitpoint, max_hitpoint_multiplier, health_multiplier, level)
    ERM_UnitHelper.modify_worm_damage(turret, level)

    return turret
end

local level = ErmConfig.MAX_LEVELS

for i = 1, level do
    data:extend({ makeLevelTurrets(i, 'small-cold-worm-turret') })
    data:extend({ makeLevelTurrets(i, 'medium-cold-worm-turret') })
    data:extend({ makeLevelTurrets(i, 'big-cold-worm-turret') })
    data:extend({ makeLevelTurrets(i, 'behemoth-cold-worm-turret') })
    data:extend({ makeLevelTurrets(i, 'leviathan-cold-worm-turret') })

    if not settings.startup["cb-disable-mother"].value then
        data:extend({ makeLevelTurrets(i, 'mother-cold-worm-turret') })
    end
end
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 7/12/2022 6:15 PM
---

if mods['space-age'] and mods['quality'] then
    local source_effects = {
        type = "script",
        effect_id = REGISTER_BOSS_RADAR
    }
    
    data:extend({
    {
        type = "radar",
        name = "erm-boss-beacon",
        render_layer = "object",
        icon = "__base__/graphics/icons/steel-chest.png",
        icon_size = 64, icon_mipmaps = 4,
        flags = { "placeable-neutral", "not-on-map" },
        order = "erm-boss-beacon",
        is_military_target = false,
        minable = nil,
        collision_mask = nil,
        max_health = 9999,
        corpse = "small-remnants",
        collision_box = { { -0.35, -0.35 }, { 0.35, 0.35 } },
        selection_box = { { -0.5, -0.5 }, { 0.5, 0.5 } },
        max_distance_of_nearby_sector_revealed = 2,
        max_distance_of_sector_revealed = 2,
        energy_per_sector = "999999kJ",
        energy_per_nearby_scan = "1kJ",
        energy_source = {
          type = "void",
        },
        energy_usage = "1kW",
        selectable_in_game = false,
        },
    })

    for name, entity in pairs(data.raw['radar']) do
        if string.find(entity.name,'--psi-radar', nil, true) then
            -- boss radar print
            print('Registering PSI radar effect..')
            if (type(entity.created_effect) == "table") then
                table.insert(entity.created_effect, {
                    type = "direct",
                    action_delivery = {
                        type = "instant",
                        source_effects = source_effects
                    }
                })
            else
                entity.created_effect = {
                    {
                        type = "direct",
                        action_delivery = {
                            type = "instant",
                            source_effects = source_effects
                        }
                    }
                }
            end
        end
    end
end
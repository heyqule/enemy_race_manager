---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 2/15/2022 10:06 PM
---
local String = require('__stdlib__/stdlib/utils/string')
local Event = require('__stdlib__/stdlib/event/event')
require('__stdlib__/stdlib/utils/defines/time')
require('__enemyracemanager__/global')

local ErmGui = require('__enemyracemanager__/gui/main')

local onGuiClick = function(event)
    ErmGui.main_window.open_detail_window(event)

    ErmGui.detail_window.replace_enemy(event)
    ErmGui.detail_window.confirm(event)

    ErmGui.main_window.reset_default(event)
    ErmGui.main_window.kill_idle_units(event)
    -- Close event must handle the last
    ErmGui.main_window.toggle_main_window(event)
    ErmGui.main_window.toggle_close(event)
    ErmGui.detail_window.toggle_close(event)

    if ErmGui.main_window.require_update_all then
        ErmGui.main_window.update_all()
    end
end

Event.register(defines.events.on_gui_click, onGuiClick)

Event.register(defines.events.on_player_created, function(event)
    ErmGui.main_window.update_overhead_button(event.player_index)
end)

local gui_close_switch = {
    [ErmGui.main_window.root_name] = function(owner)
        ErmGui.main_window.hide(owner)
    end,
    [ErmGui.detail_window.root_name] = function(owner)
        ErmGui.detail_window.hide(owner)
    end
}

local onGuiClose = function(event)
    local owner = game.players[event.player_index]
    if owner and event.element and event.element.valid then
        local name = event.element.name
        if gui_close_switch[name] then
            gui_close_switch[name](owner)
        end
    end
end

Event.register(defines.events.on_gui_closed, onGuiClose)

local gui_value_change_switch = {
    [ErmGui.detail_window.levelup_slider_name] = function(event)
        ErmGui.detail_window.update_slider_text(event, ErmGui.detail_window.levelup_slider_name, ErmGui.detail_window.levelup_value_name)
    end,
    [ErmGui.detail_window.evolution_factor_slider_name] = function(event)
        ErmGui.detail_window.update_slider_text(event, ErmGui.detail_window.evolution_factor_slider_name, ErmGui.detail_window.evolution_factor_value_name)
    end,
}

local onGuiValueChange = function(event)
    if event.element and event.element.valid then
        local nameToken = String.split(event.element.name, '/')
        if gui_value_change_switch[nameToken[2]] then
            gui_value_change_switch[nameToken[2]](event)
        end
    end
end

Event.register(defines.events.on_gui_value_changed, onGuiValueChange)
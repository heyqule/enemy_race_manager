---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 10/23/2021 12:53 PM
---
require("__enemyracemanager__/global")
require('prototypes/finalize-unit-prototypes')
require('prototypes/health-balance')

local String = require('__erm_libs__/stdlib/string')
local MapgenFunctions = require("__erm_libs__/prototypes/map_gen")

if DEBUG_MODE then
    data.raw["radar"]["radar"]["max_distance_of_sector_revealed"] = 15
    data.raw["radar"]["radar"]["max_distance_of_nearby_sector_revealed"] = 15

    local autoplace_count = 0
    local prototype_count = 0
    local erm_prototype_count = 0
    local damage_types_count = 0
    local damage_types = {}
    
    local planets_count = 0
    local planets_with_pollutant = 0
    local planets_with_enemy_autoplace = 0
    local planets = { }

    local space_loc_count = 0
    local space_locs = { }
    
    for type_name, entity_type in pairs(data.raw) do
        for entity_name, entity in pairs(entity_type) do
            prototype_count = prototype_count + 1

            if entity.autoplace ~= nil then
                autoplace_count = autoplace_count + 1

                local nameToken = String.split(entity.name, "--")
                if table_size(nameToken) == 3 then
                    erm_prototype_count = erm_prototype_count + 1
                end
            end

            if type_name == "damage-type" then
                damage_types_count = damage_types_count + 1
                table.insert(damage_types, entity.name)
            end

            if type_name == "planet" then
                planets_count = planets_count + 1
                if entity.pollutant_type then
                    planets_with_pollutant = planets_with_pollutant + 1
                end
                
                local enemy_autoplaces = nil
                if MapgenFunctions.has_enemy_autoplace(entity) then
                    planets_with_enemy_autoplace = planets_with_enemy_autoplace + 1
                    enemy_autoplaces = MapgenFunctions.get_enemy_autoplaces(entity)
                end
                table.insert(planets, {
                    name = entity.name,
                    pollutant_type = entity.pollutant_type,
                    enemy_autoplaces = enemy_autoplaces,
                    territory_units = MapgenFunctions.territory_units(entity)
                })
            end

            if type_name == "space-location" then
                space_loc_count = space_loc_count + 1
                table.insert(space_locs, {
                    name = entity.name
                })
            end
        end
    end
    log("Total Prototypes:" .. prototype_count)
    log("Total Prototypes with autoplace: " .. autoplace_count)
    log("Total ERM enemy prototype with autoplace: " .. erm_prototype_count)

    log("Total Damage Types:"..damage_types_count)
    log(serpent.block(damage_types))

    log("Total Planets:"..planets_count)
    log("Total Planets with pollutant_type:"..planets_count)
    log(serpent.block(planets))

    log("Total Space Location:"..space_loc_count)
    log(serpent.block(space_locs))
        
end

--- Revert this value to default as it affects ERM spawner balance.
--- Bob Enemies changes it to 20 lol.
data.raw["utility-constants"].default.spawner_evolution_factor_health_modifier = 10

for _, planet in pairs(data.raw['planet']) do
    if planet.hidden then
        data.raw['mod-data'][MOD_DATA_SURFACE_EXCLUSIONS].data[planet.name] = true
        data.raw['mod-data'][MOD_DATA_INTERPLANETARY_ATTACKS].data[planet.name] = true
    end
end
